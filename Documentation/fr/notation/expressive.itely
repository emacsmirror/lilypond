@c -*- coding: utf-8; mode: texinfo; documentlanguage: fr -*-

@ignore
   Translation of GIT committish: 772e0e24539737ac9cb88ee0b457af42dd065be7

   When revising a translation, copy the HEAD committish of the
   version that you are working on.  For details, see the Contributors'
   Guide, node Updating translation committishes..
@end ignore

@c \version "2.21.0"

@c Translators: Valentin Villenave, Jean-Charles Malahieude
@c Translation checkers: J.-C. Malahieude, John Mandereau, Jean Abou Samra


@node Expressive marks
@section Signes d'interprétation

@lilypondfile[quote]{snippets/expressive-headword.ly}

Ce chapitre traite des différentes indications d'interprétation que l'on
peut trouver sur les partitions.


@node Expressive marks attached to notes
@subsection Signes d'interprétation attachés à des notes

Nous allons voir au cours de ces lignes comment ajouter aux notes des
indications d'interprétation -- articulation, ornementation, nuance --
et aborderons la manière de générer vos propres signes.


@node Articulations and ornamentations
@unnumberedsubsubsec Articulations et ornements

@cindex @qq{accent}, articulation
@cindex articulation, @qq{accent}
@cindex @qq{marcato}, articulation
@cindex articulation, @qq{marcato}
@cindex @qq{staccatissimo}, articulation
@cindex articulation, @qq{staccatissimo}
@cindex @qq{espressivo}, articulation
@cindex articulation, @qq{espressivo}
@cindex @qq{staccato}, articulation
@cindex articulation, @qq{staccato}
@cindex @qq{tenuto}, articulation
@cindex articulation, @qq{tenuto}
@cindex @qq{portato}, articulation
@cindex articulation, @qq{portato}
@cindex @qq{poussé}, archet
@cindex archet, indication
@cindex @qq{tiré}, archet
@cindex @qq{flageolet}, harmoniques
@cindex harmoniques, @qq{flageolet}
@cindex @qq{pouce}, doigté
@cindex doigté, @qq{pouce}
@cindex pied, indication
@cindex orgue, indication, pédalier
@cindex pédalier, orgue indication
@cindex @qq{talon}, pédalier
@cindex pédalier, @qq{talon}
@cindex @qq{pointe}, pédalier
@cindex pédalier, @qq{pointe}
@cindex @qq{ouvert}, articulation
@cindex articulation, @qq{ouvert}
@cindex open high hat
@cindex high hat, open
@cindex @qq{semi-ouvert}, articulation
@cindex articulation, @qq{semi-ouvert}
@cindex half-open high hat
@cindex high hat, half open
@cindex @qq{stop}, articulation
@cindex articulation, @qq{stop}
@cindex pédale high hat
@cindex high hat, pédale
@cindex @qq{snappizzicato}, signe
@cindex signe @qq{snappizzicato}
@cindex @qq{grupetto}, ornement
@cindex ornement, @qq{grupetto}
@cindex @qq{grupetto renversé}, ornement
@cindex ornement, @qq{grupetto renversé}
@cindex @qq{grupetto barré}, ornement
@cindex ornement, @qq{grupetto barré}
@cindex @qq{grupetto Haydn}, ornement
@cindex ornement, @qq{grupetto Haydn}
@cindex @qq{trille}, ornement
@cindex ornement, @qq{trille}
@cindex @qq{mordant}, ornement
@cindex ornement, @qq{mordant}
@cindex @qq{mordant ascendant}, ornement
@cindex ornement, @qq{mordant ascendant}
@cindex @qq{mordant descendant}, ornement
@cindex ornement, @qq{mordant descendant}
@cindex @qq{signum congruentiae} ornement
@cindex ornement, @qq{signum congruentiae}
@cindex point d'orgue
@cindex Henze, point d'orgue
@cindex @qq{segno}, signe
@cindex signe, @qq{segno}
@cindex @qq{coda}, signe
@cindex @qq{variante coda}, signe

@funindex \accent
@funindex \marcato
@funindex \staccatissimo
@funindex \espressivo
@funindex \staccato
@funindex \tenuto
@funindex \portato
@funindex \upbow
@funindex \downbow
@funindex \flageolet
@funindex \thumb
@funindex \lheel
@funindex \rheel
@funindex \ltoe
@funindex \rtoe
@funindex \open
@funindex \halfopen
@funindex \stopped
@funindex \snappizzicato
@funindex \turn
@funindex \reverseturn
@funindex \slashturn
@funindex \haydnturn
@funindex \trill
@funindex \prall
@funindex \mordent
@funindex \prallprall
@funindex \prallmordent
@funindex \upprall
@funindex \downprall
@funindex \upmordent
@funindex \downmordent
@funindex \pralldown
@funindex \prallup
@funindex \lineprall
@funindex \signumcongruentiae
@funindex \veryshortfermata
@funindex \shortfermata
@funindex \fermata
@funindex \longfermata
@funindex \verylongfermata
@funindex \henzeshortfermata
@funindex \henzelongfermata
@funindex \segno
@funindex \coda
@funindex \varcoda
@funindex -

Les différents symboles qui indiquent des ponctuations ou des modes de
jeu différents s'ajoutent aux notes de la manière suivante :

@example
@var{note}\@var{nom}
@end example

Les valeurs de @var{nom} sont répertoriées dans l'annexe
@ref{List of articulations}. En voici un exemple :

@lilypond[verbatim,quote]
\relative {
  c''4\staccato c\mordent b2\turn
  c1\fermata
}
@end lilypond

@cindex marcato
@cindex tenuto
@cindex staccatissimo
@cindex accent
@cindex staccato
@cindex portato

Certains signes d'articulation disposent d'un raccourci. On les ajoute à
chaque note au moyen d'un tiret suivi du caractère correspondant à
l'articulation désirée. C'est entre autres le cas pour
@notation{marcato}, @notation{stopped}, @notation{tenuto},
@notation{staccatissimo}, @notation{accent}, @notation{staccato}, et
@notation{portato}, comme l'illustre l'exemple ci-dessous.

@lilypond[verbatim,quote]
\relative {
  c''4-^  c-+  c--  c-!
  c4->  c-.  c2-_
}
@end lilypond

Même si LilyPond place automatiquement ces symboles, selon les règles
contenues dans le fichier @file{scm/script.scm}, il est possible de
l'obliger à les positionner au-dessus ou en dessous de la note, comme
indiqué au chapitre @ref{Direction and placement}.

Le type d'objet graphique créé par une articulation dépend de ce à quoi
il est attaché.

@itemize @bullet
@item
Attachées à des notes ou des silences ordinaires, les articulations
créent des objets @code{script}.

@item
Attachées à des silences multimesures, les articulations créent des
objets @code{MultiMeasureRestScript}.
@end itemize

@lilypond[verbatim,quote,fragment]
\override Score.Script.color = #(universal-color 'vermillion)
\override Score.MultiMeasureRestScript.color = #(universal-color 'blue)
\override Score.CaesuraScript.color = #(universal-color 'orange)
a'2\fermata r\fermata
R1\fermata
g'2 \caesura \fermata f'2
@end lilypond

En dehors des articulations habituelles, vous pouvez adjoindre du texte
-- avec ou sans mise en forme -- à n'importe quelle note. Voir à ce
propos @ref{Text scripts}.

Pour plus d'information sur la manière d'ordonner @code{Scripts} et
@code{TextScripts}, consultez le chapitre @rlearningnamed{Placement of
objects, Positionnement des objets}.

@snippets

@cindex articulation, valeur par défaut, modification
@funindex \dashBang
@funindex \dashDash
@funindex \dashDot
@funindex \dashHat
@funindex \dashLarger
@funindex \dashPlus
@funindex \dashUnderscore
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/modifying-default-values-for-articulation-shorthand-notation.ly}

@cindex scripts, ordre vertical
@cindex vertical, ordre des scripts
@funindex script-priority
@anchor{Controlling the vertical ordering of scripts}
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/controlling-the-vertical-ordering-of-scripts.ly}
@xref{Default values for script-priority}.

@cindex grupetto décalé
@cindex décalé, grupetto
@funindex suggestAccidentals
@funindex AccidentalSuggestion
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/creating-a-delayed-turn.ly}

@morerefs
Glossaire musicologique :
@rglos{accent},
@rglos{portato},
@rglos{staccato},
@rglos{tenuto}.

Manuel d'initiation :
@rlearningnamed{Placement of objects, Positionnement des objets}.

Manuel de notation :
@ref{Text scripts},
@ref{Direction and placement},
@ref{List of articulations},
@ref{Trills}.

Fichiers d'initialisation :
@file{scm/script.scm}.

Morceaux choisis :
@rlsrnamed{Expressive marks,Signes d'interprétation}.

Référence des propriétés internes :
@rinternals{CaesuraScript},
@rinternals{MultiMeasureRestScript},
@rinternals{Script},
@rinternals{TextScript}.
@endmorerefs


@node Dynamics
@unnumberedsubsubsec Nuances

@cindex nuances

@funindex \ppppp
@funindex \pppp
@funindex \ppp
@funindex \pp
@funindex \p
@funindex \mp
@funindex \mf
@funindex \f
@funindex \ff
@funindex \fff
@funindex \ffff
@funindex \fffff
@funindex \fp
@funindex \sf
@funindex \sff
@funindex \sp
@funindex \spp
@funindex \sfz
@funindex \rfz
@funindex \n

À chaque nuance absolue correspond une commande qui peut être indiquée
après une note : @code{c4\ff} par exemple. Les commandes de nuance
disponibles sont @code{\ppppp}, @code{\pppp}, @code{\ppp}, @code{\pp},
@code{\p}, @code{\mp}, @code{\mf}, @code{\f}, @code{\ff}, @code{\fff},
@code{\ffff}, @code{\fffff}, @code{\fp}, @code{\sf}, @code{\sff},
@code{\sp}, @code{\spp}, @code{\sfz}, @code{\rfz}et @code{\n}. Les
nuances se placent aussi bien en dessous qu'au-dessus de la portée ;
pour plus d'information, consultez @ref{Direction and placement}.

@lilypond[verbatim,quote]
\relative c'' {
  c2\ppp c\mp
  c2\rfz c^\mf
  c2_\spp c^\ff
}
@end lilypond

@cindex soufflet
@cindex crescendo
@cindex decrescendo
@cindex diminuendo

@funindexpost \<
@funindexpost \>
@funindexpost \!
@funindex \cr
@funindex \decr
@funindex \endcr
@funindex \enddecr

Un crescendo est délimité par @code{\<} et @code{\!}, ou peut se
terminer par une commande de nuance explicite, ou bien un decrescendo ou
un nouveau crescendo. Il en va de même pour un diminuendo. Au lieu de
@code{\<} et @code{\>}, vous pouvez utiliser @code{\cr} et @code{\decr},
tout comme @code{\endcr} et @code{\enddecr} au lieu de @code{\!}, auquel
cas LilyPond n'imprimera pas de soufflet (@emph{hairpin} en anglais).

@lilypond[verbatim,quote]
\relative c'' {
  c2\< c\!
  d2\< d\f
  e2\< e\>
  f2\> f\!
  e2\> e\mp
  d2\> d\>
  c1\!
}
@end lilypond

Un soufflet terminé par un simple @code{\!} prendra fin sur la droite de
la tête de note à laquelle il est attaché. Dans le cas où il se termine
par l'intervention d'un autre soufflet (contraire ou non), il prendra
fin au milieu de la tête de note affublée d'un @code{\<} ou
d'un @code{\>}, et le nouveau soufflet débutera à l'extrémité droite de
cette même tête de note. Un soufflet se terminant sur le premier temps
d'une mesure s'arrêtera à la barre de mesure.

@lilypond[verbatim,quote]
\relative {
  c''1\< | c4 a c\< a | c4 a c\! a\< | c4 a c a\!
}
@end lilypond

Il en va de même lorsqu'un soufflet est interrompu par une nuance
explicite. Notez bien que la largeur occupée par cette nuance explicite
influe sur la terminaison du soufflet :

@lilypond[verbatim,quote]
\relative {
  c''1\< | c4 a c\mf a | c1\< | c4 a c\ffff a
}
@end lilypond

@cindex nuances successives sur une note tenue
@cindex tenue et nuances successives

@funindex \after

Les indications de nuance sont attachées aux notes ; aussi, lorsque l'on
veut faire se succéder plusieurs nuances pendant une note tenue, il
faudra avoir recours à la commande @code{\after} qui permet aussi de
gérer le différé des articulations et scripts textuels :

@lilypond[verbatim,quote]
<<
  \relative {
    \after 2 \< c'1
    d4\f\> e f g
    \after 2. \pp c,1

    \after 2. \fermata e
    \after 2. ^"Fine." f
  }
  \relative {
    \repeat unfold 12 c'4
    c c c c\fermata
    c c c c
  }
>>
@end lilypond

Plusieurs instances de @code{\after} peuvent se succéder afin de graver
plusieurs indications pour une note. Ceci est particulièrement utile
lorsqu'il faut ajouter un crescendo et un decrescendo à une même note :

@lilypond[verbatim,quote]
\relative {
  c''4\< d\! e\> c\!
  \after 4 \< \after 2\> \after 2. \! f1
  \textLengthOn
  \after 4 \> \after 2. ^"hush!" c1
  g4\pp
}
@end lilypond

@cindex vide, accord
@cindex accord vide
Lorsque la première d'une succession d'indications sur une même note
coïncide avec son attaque, il est judicieux de l'attacher à un accord
vide @code{<>} ; les indications seront alors saisies selon leur ordre
d'apparition :

@lilypond[verbatim,quote]
{
  <>\< \after 4 \> \after 2 \! c'1
  % plus facile à écrire et lire que :
  \after 4 \> \after 2 \! c'1\<
}
@end lilypond

@cindex espressivo

@funindex \espressivo

On peut aussi avoir recours à l'indication @code{\espressivo} pour
indiquer un crescendo suivi d'un decrescendo sur une même note. Gardez à
l'esprit qu'il s'agit d'une articulation, et en aucun cas d'une nuance.

@lilypond[verbatim,quote]
\relative {
  c''2 b4 a
  g1\espressivo
  \after 2. \espressivo c
}
@end lilypond

@funindex \cresc
@funindex \decresc
@funindex \dim

La commande @code{\cresc} permet d'indiquer textuellement le début d'un
crescendo. @code{\decresc} ou @code{\dim} marquent le début d'un
decrescendo. Les lignes d'extension sont gérées automatiquement.

@lilypond[verbatim,quote]
\relative {
  g'8\cresc a b c b c d e\mf |
  f8\decresc e d c e\> d c b |
  a1\dim ~ |
  a2. r4\! |
}
@end lilypond

@funindex \crescTextCresc
@funindex \dimTextDecresc
@funindex \dimTextDecr
@funindex \dimTextDim
@funindex \crescHairpin
@funindex \dimHairpin

Une indication textuelle peut indiquer, au lieu d'un soufflet, un
changement de nuance :

@lilypond[verbatim,quote]
\relative c'' {
  \crescTextCresc
  c4\< d e f\! |
  \dimTextDecresc
  g4\> e d c\! |
  \dimTextDecr
  e4\> d c b\! |
  \dimTextDim
  d4\> c b a\! |
  \crescHairpin
  \dimHairpin
  c4\< d\! e\> d\! |
}
@end lilypond

Pour créer des indications de nuance qui restent alignées avec les
nuances habituelles, reportez-vous au chapitre @ref{New dynamic marks}.

@cindex nuances, positionnement vertical
@cindex vertical, positionnement des nuances

@funindex DynamicLineSpanner

Le positionnement vertical des nuances est géré par le
@rinternals{DynamicLineSpanner}.

@funindex \dynamicUp
@funindex \dynamicDown
@funindex \dynamicNeutral

L'utilisation d'un contexte @code{Dynamics} permet de graver les nuances
sur leur propre ligne -- Il suffit de placer des silences invisibles
pour gérer le temps. Bien que le contexte @code{Dynamics} accepte des
notes pour indiquer les durées, celles-ci ne seront pas imprimées. Le
contexte @code{Dynamics} peut aussi contenir des indications textuelles
avec ou sans extenseur, ainsi que les indications de pédale.

@lilypond[verbatim,quote]
<<
  \new Staff \relative {
    c'2 d4 e |
    c4 e e,2 |
    g'4 a g a |
    c1 |
  }
  \new Dynamics {
    s1\< |
    s1\f |
    s2\dim s2-"rit." |
    s1\p |
  }
>>
@end lilypond

@warning{Même si la partition ne comporte qu'une seule indication
absolue de nuance, comme un @code{@bs{}p}, LilyPond crée @emph{deux}
objets la concernant -- un @code{DynamicText} et un objet
@code{DynamicLineSpanner} -- et les propriétés contrôlant cette
indication de nuance sont partagées entre ces deux objets. Par exemple,
la taille peut se modifier par la propriété @code{DynamicText.font-size}
alors que le positionnement vertical est contrôlé par
@code{DynamicLineSpanner.Y-offset}.

Par voie de conséquence, un code tel que

@example
@bs{}tweak font-size 5 @bs{}p
@end example

@noindent
est fonctionnel, mais

@example
@bs{}tweak Y-offset 5 @bs{}p
@end example

@noindent
ne l'est pas.  Il faudra donc écrire

@example
@bs{}tweak DynamicLineSpanner.Y-offset 5 @bs{}p
@end example
}

@predefined
@code{\dynamicUp},
@code{\dynamicDown},
@code{\dynamicNeutral},
@code{\crescTextCresc},
@code{\dimTextDim},
@code{\dimTextDecr},
@code{\dimTextDecresc},
@code{\crescHairpin},
@code{\dimHairpin}.
@endpredefined

@snippets

@cindex soufflet et barre de mesure
@cindex barre de mesure et soufflet
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/setting-hairpin-behavior-at-bar-lines.ly}

@cindex soufflet, longueur minimale
@cindex longueur minimale, soufflet
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/setting-the-minimum-length-of-hairpins.ly}

@cindex soufflet, alignement directionnel sur @code{NoteColumn}
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/aligning-the-ends-of-hairpins-to-notecolumn-directions.ly}

@cindex soufflet, déplacement de l'extrémité
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/moving-the-ends-of-hairpins.ly}

@cindex al niente, soufflet
@cindex niente, al, soufflet
@cindex soufflet, al niente
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/printing-hairpins-using-al-niente-notation.ly}

@cindex Ferneyhough, soufflet
@cindex soufflet Ferneyhough
@cindex ouvert, soufflet
@cindex soufflet ouvert
@cindex plat, soufflet
@cindex soufflet plat
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/printing-hairpins-in-various-styles.ly}

@cindex vertical, alignement de nuance
@cindex alignement vertical, nuance
@cindex nuance, alignement vertical
@cindex vertical, alignement de script textuel
@cindex script textuel, alignement vertical
@cindex alignment vertical, script textuel
@funindex DynamicLineSpanner
@funindex \textLengthOn
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/vertically-aligned-dynamics-and-textscripts.ly}

@cindex vertical, alignement des nuances, rupture
@cindex alignement vertical, rupture pour les nuances
@cindex nuances, rupture d'alignement vertical
@funindex \breakDynamicSpan
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/breaking-vertical-alignment-of-dynamics-and-textscripts.ly}

@cindex nuance, ligne de prolongation, masquage
@cindex masquage, nuance, ligne de prolongation
@cindex ligne de prolongation, nuance, masquage
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/hiding-the-extender-line-for-text-dynamics.ly}

@cindex nuance textuelle, style
@cindex texte, nuance, style
@cindex style, nuance textuelle
@funindex crescendoText
@funindex crescendoSpanner
@funindex decrescendoText
@funindex decrescendoSpanner
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/changing-text-and-spanner-styles-for-text-dynamics.ly}

@morerefs
Glossaire musicologique :
@rglos{al niente},
@rglos{crescendo},
@rglos{decrescendo},
@rglosnamed{hairpin,soufflet}.

Manuel d'initiation :
@rlearningnamed{Articulation and dynamics, Articulations et nuances}.

Manuel de notation :
@ref{Enhancing MIDI output},
@ref{Direction and placement},
@ref{Controlling MIDI dynamics},
@ref{New dynamic marks}.

Morceaux choisis :
@rlsrnamed{Expressive marks,Signes d'interprétation}.

Référence des propriétés internes :
@rinternals{DynamicText},
@rinternals{Hairpin},
@rinternals{DynamicLineSpanner},
@rinternals{Dynamics}.
@endmorerefs


@node New dynamic marks
@unnumberedsubsubsec Personnalisation des indications de nuance

@cindex indication de nuance, personnalisation
@cindex nuance personnalisée

La manière la plus simple de personnaliser une indication de nuance
consiste à utiliser un objet @code{\markup}.

@lilypond[verbatim,quote]
moltoF = \markup { molto \dynamic f }

\relative {
  <d' e>16_\moltoF <d e>
  <d e>2..
}
@end lilypond

@cindex nuances éditoriales
@cindex nuances entre parenthèses
@cindex nuances suggérées

@funindex \bracket
@funindex \dynamic

Vous pouvez créer des indications de nuance éditoriales (entre
parenthèses ou crochets) grâce aux étiquettes (@emph{mode markup}) ; la
syntaxe en est abordée au chapitre @ref{Formatting text}.

@lilypond[verbatim,quote]
roundF = \markup {
    \center-align \concat { \bold { \italic ( }
           \dynamic f \bold { \italic ) } } }
boxF = \markup { \bracket { \dynamic f } }
\relative {
  c'1_\roundF
  c1_\boxF
}
@end lilypond

@cindex make-dynamic-script

@funindex make-dynamic-script

Grâce à la fonction @code{make-dynamic-script}, vous pouvez créer de
nouvelles marques textuelles que vous combinerez avec les signes de
nuance.

@lilypond[verbatim,quote]
sfzp = #(make-dynamic-script "sfzp")
\relative {
  c'4 c c\sfzp c
}
@end lilypond

@code{make-dynamic-script} accepte en argument tout objet de type
@emph{markup}. Notez bien que la police des nuances ne contient
que les caractères +@code{f}, @code{m}, @code{p}, @code{r},
@code{s}, @code{z} et @code{n}, et que les marques de nuance
possèdent des propriétés particulières et prédéfinies quant à leur
police. Aussi, lorsque vous créez du texte en pareille situation,
nous vous recommandons d'utiliser @code{\normal-text} pour annuler
ces propriétés. Recourir à la fonction @code{make-dynamic-script}
plutôt qu'à un simple @emph{markup} permet de s'assurer que ces
objets personnalisés et les soufflets seront alignés
lorsqu'attachés à une même note.

@lilypond[verbatim,quote]
roundF = \markup { \center-align \concat {
           \normal-text { \bold { \italic ( } }
           \dynamic f
           \normal-text { \bold { \italic ) } } } }
boxF = \markup { \bracket { \dynamic f } }
mfEspress = \markup { \center-align \line {
              \hspace #3.7 mf \normal-text \italic espress. } }
roundFdynamic = #(make-dynamic-script roundF)
boxFdynamic = #(make-dynamic-script boxF)
mfEspressDynamic = #(make-dynamic-script mfEspress)
\relative {
  c'4_\roundFdynamic\< d e f
  g,1~_\boxFdynamic\>
  g
  g'~\mfEspressDynamic
  g
}
@end lilypond

La construction d'une indication de nuance personnalisée peut aussi se
faire en langage Scheme ; voir @rextendnamed{Markup construction in
Scheme, Construction d'un markup en Scheme} pour en connaître les
modalités.

@lilypond[verbatim,quote]
moltoF = #(make-dynamic-script
            (markup #:normal-text "molto"
                    #:dynamic "f"))
\relative {
  <d' e>16 <d e>
  <d e>2..\moltoF
}
@end lilypond

L'utilisation d'un @code{\tweak} permettra d'aligner par la gauche
cette nuance textuelle sur la tête de note, plutôt qu'un centrage :

@lilypond[verbatim,quote]
moltoF = \tweak DynamicText.self-alignment-X #LEFT
         #(make-dynamic-script
            (markup #:normal-text "molto"
                    #:dynamic "f"))
\relative {
  <d' e>16 <d e>
  <d e>2..\moltoF <d e>1
}
@end lilypond

L'utilisation des fontes en mode @emph{markup} est abordée au chapitre
@ref{Selecting font and font size}.

@morerefs
Manuel de notation :
@ref{Enhancing MIDI output},
@ref{Controlling MIDI dynamics},
@ref{Formatting text},
@ref{Selecting font and font size}.

Morceaux choisis :
@rlsrnamed{Expressive marks,Signes d'interprétation}.

Manuel d'extension :
@rextendnamed{Markup construction in Scheme,
Construction d'un markup en Scheme}.
@endmorerefs


@node Expressive marks as curves
@subsection Signes d'interprétation sous forme de courbe

@cindex courbes

Ce chapitre traite des signes d'interprétation imprimés sous forme de
courbe : liaisons d'articulation ou de phrasé, respirations, chutes
et sauts.


@node Slurs
@unnumberedsubsubsec Liaisons d'articulation

@cindex legato
@cindex liaison d'articulation
@funindex (
@funindex )

Une liaison d'articulation indique que les notes doivent être jouées
liées, ou @emph{legato}. Ces liaisons s'indiquent au moyen de
parenthèses.

@warning{Lorsque la musique est polyphonique, la liaison doit se
terminer dans la voix où elle a été entamée.}

@lilypond[verbatim,quote]
\relative {
  f''4( g a) a8 b(
  a4 g2 f4)
  <c e>2( <b d>2)
}
@end lilypond

@cindex liaison, orientation manuelle
@cindex liaison, au-dessous des notes
@cindex liaison, au-dessus des notes

@funindex \slurDown
@funindex \slurNeutral
@funindex \=

Vous pouvez décider de l'orientation des liaisons par rapport à la
portée, comme indiqué au chapitre @ref{Direction and placement}.

@cindex articulation, liaison
@cindex liaisons d'articulation multiples
@cindex liaisons d'articulation simultanées
@cindex multiples, liaisons d'articulation
@cindex simultanées, liaisons d'articulation

@c some entries for '\=' are auto-generated; don't use @funindexpost
@funindex \=

Plusieurs liaisons peuvent intervenir simultanément ou concurremment, ce
qui requiert une attention spéciale. Dans la majorité des cas, la
liaison externe indique un phrasé, et un phrasé peut recouvrir plusieurs
liaisons d'articulation -- @pxref{Phrasing slurs}. Dans le cas où
plusieurs liaisons d'articulation interviennent au sein d'un même
contexte @code{Voice}, leurs début et fin doivent être labellisés par un
@code{\=} suivi d'un identifiant (symbole ou entier positif).

@lilypond[verbatim,quote]
\fixed c' {
  <c~ f\=1( g\=2( >2 <c e\=1) a\=2) >
}
@end lilypond

@cindex liaison, style de trait
@cindex liaison, trait plein
@cindex liaison, trait pointillé
@cindex liaison, tirets
@cindex plein, trait de liaison
@cindex pointillé, trait de liaison
@cindex tiret, trait de liaison
@cindex style de trait, liaison

@funindex \slurDashed
@funindex \slurDotted
@funindex \slurSolid

Une liaison est par défaut dessinée d'un trait plein. Il est aussi
possible de l'imprimer sous la forme de tirets ou en pointillé :

@lilypond[verbatim,quote]
\relative {
  c'4( e g2)
  \slurDashed
  g4( e c2)
  \slurDotted
  c4( e g2)
  \slurSolid
  g4( e c2)
}
@end lilypond

@funindex \slurHalfDashed
@funindex \slurHalfSolid

@cindex liaison, tirets et trait continu

En utilisant @code{\slurHalfDashed}, la première moitié de la liaison
aura un trait discontinu et continu pour la seconde. L'inverse s'obtient
avec @code{\slurHalfSolid}.

@lilypond[verbatim,quote]
\relative {
  c'4( e g2)
  \slurHalfDashed
  g4( e c2)
  \slurHalfSolid
  c4( e g2)
  \slurSolid
  g4( e c2)
}
@end lilypond

@funindex \slurDashPattern

@cindex liaison, densité des tirets

Vous pouvez même personnaliser la densité des tirets d'une liaison :

@lilypond[verbatim,quote]
\relative {
  c'4( e g2)
  \slurDashPattern 0.7 0.75
  g4( e c2)
  \slurDashPattern 0.5 2.0
  c4( e g2)
  \slurSolid
  g4( e c2)
}
@end lilypond

@predefined
@funindex \slurUp

@code{\slurUp},
@code{\slurDown},
@code{\slurNeutral},
@code{\slurDashed},
@code{\slurDotted},
@code{\slurHalfDashed},
@code{\slurHalfSolid},
@code{\slurDashPattern},
@code{\slurSolid}.
@endpredefined

@snippets

@cindex liaison, ajustement des extrémités
@cindex ajustement des extrémités, liaison
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/adjusting-slur-positions-vertically.ly}

@cindex liaison doublée, pour legato d'accords
@cindex doublée, legato d'accords
@funindex doubleSlurs
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/using-double-slurs-for-legato-chords.ly}

@cindex liaison et texte
@cindex texte et liaison
@cindex texte, inclusion dans une liaison
@cindex liaison, inclusion de texte
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/positioning-text-markups-inside-slurs.ly}

@cindex slur, defining dash patterns
@cindex dash patterns, slur
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/making-slurs-with-complex-dash-structure.ly}

@morerefs
Glossaire musicologique :
@rglosnamed{slur,liaison}.

Manuel d'initiation :
@rlearningnamed{On the un-nestedness of brackets and ties,
Non-imbrication des crochets et liaisons}.

Manuel de notation :
@ref{Direction and placement},
@ref{Phrasing slurs}.

Morceaux choisis :
@rlsrnamed{Expressive marks,Signes d'interprétation}.

Référence des propriétés internes :
@rinternals{Slur}.
@endmorerefs


@node Phrasing slurs
@unnumberedsubsubsec Liaisons de phrasé

@cindex liaison de phrasé
@cindex phrasé, liaison de

@funindexpost \(
@funindexpost \)

Une liaison de phrasé relie plusieurs notes en délimitant une phrase
musicale. On indique les points de départ et d'arrivée avec @code{\(} et
@code{\)} respectivement.

@lilypond[verbatim,quote]
\relative {
  c''4\( d( e) f(
  e2) d\)
}
@end lilypond

@funindex \phrasingSlurUp
@funindex \phrasingSlurDown
@funindex \phrasingSlurNeutral

D'un point de vue typographique, rien ne distingue une liaison de phrasé
d'une liaison d'articulation. Cependant, LilyPond les considère comme
des objets différents. Une commande @code{\slurUp} n'affectera donc pas
une liaison de phrasé. Vous pouvez décider de l'orientation des liaisons
de phrasé par rapport à la portée, comme indiqué au chapitre
@ref{Direction and placement}.

@cindex liaisons de phrasé multiples
@cindex liaisons de phrasé simultanées
@cindex multiple, liaison de phrasé
@cindex simultanée, liaison de phrasé

Plusieurs liaisons de phrasé peuvent intervenir en même temps, dès lors
qu'elles sont labellisées, comme des liaisons normales -- @pxref{Slurs}.

@cindex liaison, style de trait
@cindex liaison, trait plein
@cindex liaison, trait pointillé
@cindex liaison, tirets
@cindex plein, trait de liaison
@cindex pointillé, trait de liaison
@cindex tiret, trait de liaison
@cindex style de trait, liaison

@funindex \phrasingSlurDashed
@funindex \phrasingSlurDotted
@funindex \phrasingSlurSolid

Une liaison est par défaut dessinée d'un trait plein. Il est aussi
possible de l'imprimer sous la forme de tirets ou en pointillé :

@lilypond[verbatim,quote]
\relative {
  c'4\( e g2\)
  \phrasingSlurDashed
  g4\( e c2\)
  \phrasingSlurDotted
  c4\( e g2\)
  \phrasingSlurSolid
  g4\( e c2\)
}
@end lilypond

@cindex liaison, tirets et trait continu

@funindex \phrasingSlurHalfDashed
@funindex \phrasingSlurHalfSolid

En utilisant @code{\phrasingSlurHalfDashed}, la première moitié de la
liaison aura un trait discontinu et continu pour la seconde. L'inverse
s'obtient avec @code{\phrasingSlurHalfSolid}.

@lilypond[verbatim,quote]
\relative {
  c'4\( e g2\)
  \phrasingSlurHalfDashed
  g4\( e c2\)
  \phrasingSlurHalfSolid
  c4\( e g2\)
  \phrasingSlurSolid
  g4\( e c2\)
}
@end lilypond

@funindex \phrasingSlurDashPattern

@cindex liaison, densité des tirets

Vous pouvez même personnaliser la densité des tirets d'une liaison :

@lilypond[verbatim,quote]
\relative {
  c'4\( e g2\)
  \phrasingSlurDashPattern #0.7 #0.75
  g4\( e c2\)
  \phrasingSlurDashPattern #0.5 #2.0
  c4\( e g2\)
  \phrasingSlurSolid
  g4\( e c2\)
}
@end lilypond

La personnalisation des lignes discontinues est identique pour les
liaisons de phrasé et les liaisons d'articulation. Pour plus de détails,
référez-vous aux morceaux choisis de la section @ref{Slurs}.

@predefined
@code{\phrasingSlurUp},
@code{\phrasingSlurDown},
@code{\phrasingSlurNeutral},
@code{\phrasingSlurDashed},
@code{\phrasingSlurDotted},
@code{\phrasingSlurHalfDashed},
@code{\phrasingSlurHalfSolid},
@code{\phrasingSlurDashPattern},
@code{\phrasingSlurSolid}.
@endpredefined

@morerefs
Manuel d'initiation :
@rlearningnamed{On the un-nestedness of brackets and ties,
Non-imbrication des crochets et liaisons}.

Manuel de notation :
@ref{Direction and placement},
@ref{Slurs}.

Morceaux choisis :
@rlsrnamed{Expressive marks,Signes d'interprétation}.

Référence des propriétés internes :
@rinternals{PhrasingSlur}.
@endmorerefs


@node Breath marks
@unnumberedsubsubsec Signes de respiration

@cindex respiration, indication
@cindex point d'arrêt

@funindex \breathe

La commande @code{\breathe} indique à l'interprète de raccourcir la note
qui précède pour prendre une respiration..

@lilypond[verbatim,quote]
\fixed c'' { c2. \breathe d4 }
@end lilypond

@noindent
Pour une courte interruption du son qui ne soit pas prise sur la note
précédente, @pxref{Caesuras}.

Contrairement aux autres signes d'interprétation, une respiration
constitue un événement musical à part entière. Par voie de conséquence,
toute autre marque attachée à la note précédente, telle un crochet
indiquant une ligature manuelle ou une parenthèse indiquant une liaison,
doit impérativement se placer avant l'instruction @code{\breathe}.
L'instruction @code{\breathe} ne tolère pas d'articulation en soi --
@pxref{Caesuras}.

Un signe de respiration interrompt obligatoirement les ligatures
automatiques. Pour passer outre ce fonctionnement, @pxref{Manual beams}.

@lilypond[verbatim,quote]
\fixed c'' { c8 \breathe d e f g2 }
@end lilypond

@cindex respiration, modification du symbole
@cindex signe de respiration, modification
@cindex modification, respiration, signe
@cindex coche

La propriété de contexte @code{breathMarkType} permet de contrôler
laquelle des différentes indications de respiration la commande
@code{\breathe} se chargera de créer -- @pxref{List of breath marks}.

@lilypond[verbatim,quote]
\fixed c'' {
  \set breathMarkType = #'tickmark
  c2. \breathe d4
}
@end lilypond

@morerefs
Glossaire musicologique :
@rglosnamed{breath mark, respiration}.

Manuel de notation :
@ref{Caesuras},
@ref{Divisiones}.

Morceaux choisis :
@rlsrnamed{Expressive marks,Signes d'interprétation}.

Référence des propriétés internes :
@rinternals{BreathingEvent},
@rinternals{BreathingSign},
@rinternals{Breathing_sign_engraver}.
@endmorerefs


@node Falls and doits
@unnumberedsubsubsec Chutes et sauts

@cindex chute
@cindex saut
@funindex \bendAfter

Des indications de désinence peuvent être obtenues au moyen de la
commande @code{\bendAfter}. Leur direction s'indique au moyen des signes
plus (vers le haut) ou moins (vers le bas). Le chiffre indique
l'intervalle avec la note de départ.

@lilypond[verbatim,quote]
\relative c'' {
  c2\bendAfter 4
  c2\bendAfter -4
  c2\bendAfter 6.5
  c2\bendAfter -6.5
  c2\bendAfter 8
  c2\bendAfter -8
}
@end lilypond

@snippets

@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/adjusting-the-shape-of-falls-and-doits.ly}

@morerefs
Glossaire musical :
@rglosnamed{fall,chute},
@rglosnamed{doit,saut}.

Morceaux choisis :
@rlsrnamed{Expressive marks,Signes d'interprétation}.
@endmorerefs


@node Expressive marks as lines
@subsection Signes d'interprétation sous forme de ligne

@cindex lignes

Cette partie traite de la manière de générer des signes d'interprétation
d'aspect linéaire, tels les glissandos, arpèges et trilles.


@node Glissando
@unnumberedsubsubsec Glissando

@cindex glissando
@funindex \glissando

Un glissando relie une hauteur à une autre en passant par chaque hauteur
intermédiaire.  On l'obtient en accolant la commande @code{\glissando} à
la première note.

@lilypond[verbatim,quote]
\relative {
  g'2\glissando g'
  c2\glissando c,
  \afterGrace f,1\glissando f'16
}
@end lilypond

Un glissando peut intervenir au moment d'un changement de portée :

@lilypond[verbatim,quote]
\new PianoStaff <<
  \new Staff = "right" {
    e'''2\glissando
    \change Staff = "left"
    a,,4\glissando
    \change Staff = "right"
    b''8 r |
  }
  \new Staff = "left" {
    \clef bass
    s1
  }
>>
@end lilypond

@funindex \glissandoMap

Un glissando peut affecter des notes d'un accord. En dehors du cas où
les notes des deux accords sont reliées directement l'une à l'autre, les
relations s'établissent à l'aide d'une liste Scheme @code{glissandoMap}
dont les éléments sont des paires d'entiers ; chaque paire @var{(x . y)}
crée une ligne de glissando de la note @var{x} à la note @var{y} -- les
notes d'un accord sont numérotées à partir de zéro et dans leur ordre
d'apparition dans le fichier @file{.ly}. Toutes les notes ne font pas
forcément partie d'un glissando.

@lilypond[verbatim,quote]
\relative {
  <c' e>2\glissando g'
  <c, e>\glissando <g' b>
  \break
  \set glissandoMap = #'((0 . 1) (1 . 0))
  <c, g'>\glissando <d a'>
  \set glissandoMap = #'((0 . 0) (0 . 1) (0 . 2))
  c\glissando <d f a>
  \set glissandoMap = #'((2 . 2) (0 . 0))
  <f d a'>\glissando <c f c'>
}
@end lilypond

Un glissando est indiqué graphiquement, par une ligne ou des vaguelettes
-- @pxref{Line styles}.

@snippets

@cindex contemporain, glissando
@cindex glissando contemporain
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/contemporary-glissando.ly}

@cindex glissando, marque temporelle
@cindex marque temporelle, glissando
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/adding-timing-marks-to-long-glissandi.ly}

@anchor{Making glissandi breakable}
@cindex glissando tronqué
@cindex tronqué, glissando
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/making-glissandi-breakable.ly}

@anchor{Extending glissandi across repeats}
@cindex glissando et reprise
@cindex reprise et glissando
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/extending-glissandi-across-repeats.ly}

@morerefs
Glossaire musicologique :
@rglos{glissando}.

Manuel de notation :
@ref{Line styles}.

Morceaux choisis :
@rlsrnamed{Expressive marks,Signes d'interprétation}.

Référence des propriétés internes :
@rinternals{Glissando}.
@endmorerefs

@knownissues
Il n'est pas possible d'imprimer un texte (tel que @notation{gliss.})
le long de la ligne de glissando.


@node Arpeggio
@unnumberedsubsubsec Arpèges

@cindex arpège
@cindex accord arpégé

@funindex \arpeggio
@funindex \arpeggioArrowUp
@funindex \arpeggioArrowDown
@funindex \arpeggioNormal
@funindex arpeggio-direction

On peut indiquer qu'un accord doit être arpégé en lui accolant la
commande @code{\arpeggio} :

@lilypond[verbatim,quote]
\relative { <c' e g c>1\arpeggio }
@end lilypond

LilyPond dispose de différents graphismes pour indiquer un arpège ;
@code{\arpeggioNormal} reviendra au style par défaut.

@lilypond[verbatim,quote]
\relative {
  <c' e g c>2\arpeggio

  \arpeggioArrowUp
  <c e g c>2\arpeggio

  \arpeggioArrowDown
  <c e g c>2\arpeggio

  \arpeggioNormal
  <c e g c>2\arpeggio
}
@end lilypond

@cindex arpège, symbole spécial
@cindex symbole, arpège

Ces commandes prédéfinies modifient en interne la propriété
@code{arpeggio-direction} ; leur définition complète se trouve dans le
fichier @file{ly/property-init.ly}.

@funindex \arpeggioBracket
@funindex \arpeggioParenthesis
@funindex \arpeggioParenthesisDashed

Des crochets indiquent que l'accord devra être plaqué et non arpégé :

@lilypond[verbatim,quote]
\relative {
  <c' e g c>2

  \arpeggioBracket
  <c e g c>2\arpeggio

  \arpeggioParenthesis
  <c e g c>2\arpeggio

  \arpeggioParenthesisDashed
  <c e g c>2\arpeggio

  \arpeggioNormal
  <c e g c>2\arpeggio
}
@end lilypond

Ces commandes prédéfinies apportent une dérogation à la propriété
@code{stencil} de l'objet @code{Arpeggio} et peuvent aussi adapter son
@code{X-extent} (en la matière son étendue horizontale, de telle sorte
qu'il n'entre pas en collision avec d'autres objets).

Les indications d'arpeggio peuvent se présenter sous la forme de ligne
discontinue à l'aide de la propriété @code{dash-definition}. Pour plus
de détails à ce propos, consultez @ref{Slurs}.

Un arpège peut parfois s'écrire de manière explicite, à l'aide de
liaisons de tenue. Pour plus d'information, @pxref{Ties}.

@predefined
@code{\arpeggio},
@code{\arpeggioArrowUp},
@code{\arpeggioArrowDown},
@code{\arpeggioNormal},
@code{\arpeggioBracket},
@code{\arpeggioParenthesis}
@code{\arpeggioParenthesisDashed}.
@endpredefined

@snippets

@cindex arpège, portée, enjambement
@cindex portée, arpège, enjambement
@cindex enjambement de portée, arpège
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/creating-cross-staff-arpeggios-in-a-piano-staff.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/creating-cross-staff-arpeggios-in-other-contexts.ly}

@cindex arpège, voix, enjambement
@cindex voix, arpège, enjambement
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/creating-arpeggios-across-notes-in-different-voices.ly}

@morerefs
Glossaire musicologique :
@rglos{arpeggio}.

Manuel de notation :
@ref{Slurs},
@ref{Ties}.

Fichiers d'initialisation :
@file{ly/property-init.ly}.

Morceaux choisis :
@rlsrnamed{Expressive marks,Signes d'interprétation}.

Référence des propriétés internes :
@rinternals{Arpeggio},
@rinternals{PianoStaff},
@rinternals{Slur}.
@endmorerefs

@knownissues
Les commandes prédéfinies telle que @code{\arpeggioArrowUp} s'appliquent
uniquement au contexte en cours ; elles n'affecteront donc pas un arpège
s'étendant sur d'autres voix ou portées. En pareil cas, ces commandes
demandent à être utilisées au sein d'une section @code{\context} dans le
bloc @code{\layout} ou bien avec une clause @code{\with} comme indiqué
dans @ref{Changing context default settings}. Il peut être judicieux, au
lieu d'utiliser ces raccourcis prédéfinis, d'introduire une dérogation
aux propriétés concernées de l'objet @code{Arpeggio} directement dans le
contexte approprié, comme par exemple

@example
\override Staff.Arpeggio.stencil = #ly:arpeggio::brew-chord-bracket
@end example

@noindent
pour que le crochet d'arpège couvre plusieurs voix au niveau
@code{Staff}, ou

@example
\override PianoStaff.Arpeggio.arpeggio-direction = #UP
@end example

@noindent
pour obtenir un arpège à terminaison en flêche (pointant vers le haut)
couvrant les portées d'un contexte @code{PianoStaff}.

@cindex arpège, style parenthèse

Il est impossible de mêler au même instant, dans un contexte
@code{PianoStaff}, des lignes d'arpèges connectées et d'autres non
connectées.

La manière simple de créer des lignes d'arpège sous forme de parenthèse
n'est pas opérationnelle pour des arpèges inter-portées ;
@pxref{Cross-staff stems,, Hampes et changements de portée}.


@node Trills
@unnumberedsubsubsec Trilles

@cindex trille

@funindex \trill
@funindex \startTrillSpan
@funindex \stopTrillSpan

Les trilles brefs s'indiquent comme n'importe quelle ponctuation, avec
un simple @code{\trill} ; voir @ref{Articulations and ornamentations}.

Les trilles plus longs sont délimités par @code{\startTrillSpan} et
@code{\stopTrillSpan} :

@lilypond[verbatim,quote]
\relative {
  d''1\startTrillSpan
  d1
  c2\stopTrillSpan r2
}
@end lilypond

Lorsqu'un saut de ligne intervient alors qu'une prolongation de trille
est présente, l'indication de trille et sa prolongation sont rappelées
sur la première note de la nouvelle ligne :

@lilypond[ragged-right,verbatim,quote]
\relative {
  d''1\startTrillSpan
  \break
  d1
  c2\stopTrillSpan r2
}
@end lilypond

Lorsque des trilles interviennent sur une succession de hauteurs
différentes, point n'est besoin d'expliciter la commande
@code{\stopTrillSpan} puisque l'apparition d'un nouveau trille
interrompt de fait celui qui le précédait :

@lilypond[verbatim,quote]
\relative {
  d''1\startTrillSpan
  d1
  b1\startTrillSpan
  d2\stopTrillSpan r2
}
@end lilypond

Dans l'exemple suivant, un trille se combine avec des notes d'ornement.
La syntaxe d'une telle construction ainsi que le moyen de positionner
les notes d'ornement avec précision est expliquée au chapitre
@ref{Grace notes}.

@lilypond[verbatim,quote]
\relative {
  d''1~\afterGrace
  d1\startTrillSpan { c32[ d]\stopTrillSpan }
  e2 r2
}
@end lilypond

@cindex trilles avec hauteur explicite
@cindex hauteur explicite, trille
@funindex \pitchedTrill

Les trilles qui font intervenir une hauteur précise peuvent être
indiqués par la commande @code{pitchedTrill}. Le premier argument est la
note réelle ; le second est une hauteur qui sera imprimée comme une tête
de note noire entre parenthèses.

@lilypond[verbatim,quote]
\relative {
  \pitchedTrill
  e''2\startTrillSpan fis
  d2 c2\stopTrillSpan
}
@end lilypond

@cindex trilles avec hauteur explicite et altération
@cindex altération, trilles avec hauteur explicite

L'altération de cette hauteur explicite sera indiquée automatique pour
le premier trille d'une mesure, même s'il s'agit d'un bécarre.

@lilypond[verbatim,quote,relative]
{
  \key d \major
  \pitchedTrill
  d'2\startTrillSpan cis d\stopTrillSpan
  \pitchedTrill
  d2\startTrillSpan c d\stopTrillSpan
  \pitchedTrill
  d2\startTrillSpan e d\stopTrillSpan
}
@end lilypond

@noindent
L'impression de l'altération (sur la même note dans la même mesure)
devra être forcée en ajoutant un @code{!} à la note considérée.

@lilypond[verbatim,quote]
\relative {
  \pitchedTrill
  eis''4\startTrillSpan fis
  eis4\stopTrillSpan
  \pitchedTrill
  eis4\startTrillSpan cis
  eis4\stopTrillSpan
  \pitchedTrill
  eis4\startTrillSpan fis
  eis4\stopTrillSpan
  \pitchedTrill
  eis4\startTrillSpan fis!
  eis4\stopTrillSpan
}
@end lilypond


@predefined
@code{\startTrillSpan},
@code{\stopTrillSpan}.
@endpredefined

@morerefs
Glossaire musicologique :
@rglosnamed{trill,trille}.

Manuel de notation :
@ref{Articulations and ornamentations},
@ref{Grace notes}.

Morceaux choisis :
@rlsrnamed{Expressive marks,Signes d'interprétation}.

Référence des propriétés internes :
@rinternals{TrillSpanner},
@rinternals{TrillPitchHead},
@rinternals{TrillPitchAccidental},
@rinternals{TrillPitchParentheses},
@rinternals{TrillPitchGroup},
@rinternals{Pitched_trill_engraver}.
@endmorerefs
