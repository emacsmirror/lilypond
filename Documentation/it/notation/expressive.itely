@c -*- coding: utf-8; mode: texinfo; documentlanguage: it -*-
@ignore
    Translation of GIT committish: a381f2cbd939153c7a0560b48449be4ab784bb41

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  For details, see the Contributors'
    Guide, node Updating translation committishes..
@end ignore

@c \version "2.21.0"

@c Translators: Federico Bruni
@c Translation checkers: Luca Rossetto Casel

@node Expressive marks
@section Segni di espressione

@lilypondfile[quote]{snippets/expressive-headword.ly}

Questa sezione elenca vari segni di espressione che si possono
usare in una partitura.

@menu
* Expressive marks attached to notes::
* Expressive marks as curves::
* Expressive marks as lines::
@end menu


@node Expressive marks attached to notes
@subsection Segni di espressione collegati alle note

Questa sezione spiega come creare segni di espressione
collegati alle note: articolazioni, abbellimenti e dinamiche.
Sono trattati anche i metodi per creare nuove indicazioni dinamiche.

@menu
* Articulations and ornamentations::
* Dynamics::
* New dynamic marks::
@end menu

@node Articulations and ornamentations
@unnumberedsubsubsec Articolazioni e abbellimenti

@cindex @qq{accento}, articolazione
@cindex articolazione, accento
@cindex abbellimento
@cindex @qq{marcato}, articolazione
@cindex articolazione, marcato
@cindex @qq{staccatissimo}, articolazione
@cindex articolazione, staccatissimo
@cindex @qq{espressivo}, articolazione
@cindex articolazione, espressivo
@cindex @qq{staccato}, articolazione
@cindex articolazione, staccato
@cindex @qq{tenuto}, articolazione
@cindex articolazione, tenuto
@cindex @qq{portato}, articolazione
@cindex articolazione, portato
@cindex @qq{arcata in sù}, indicazione di arcata
@cindex indicazione di arcata, in sù
@cindex @qq{arcata in giù}, indicazione di arcata
@cindex indicazione di arcata, in giù
@cindex @qq{flageolet}, armonici
@cindex armonici, flageolet
@cindex @qq{pollice}, diteggiatura
@cindex diteggiatura, pollice
@cindex segno del pedale
@cindex segno del pedale dell'organo
@cindex organo, segno del pedale
@cindex pedale, segno
@cindex @qq{tallone}, segno del pedale
@cindex segno del pedale, tallone
@cindex @qq{dito del piede}, segno del pedale
@cindex segno del pedale, dito del piede
@cindex @qq{aperto}, articolazione
@cindex articolazione, aperto
@cindex aperto, high hat (charleston)
@cindex high hat, aperto
@cindex charleston, aperto
@cindex @qq{semiaperto}, articolazione
@cindex articolazione, semiaperto
@cindex semiaperto, high hat (charleston)
@cindex high hat, semiaperto
@cindex charleston, semiaperto
@cindex @qq{chiuso}, articolazione
@cindex articolazione, chiuso
@cindex high hat, pedale
@cindex charleston, pedale
@cindex pedale, high hat (charleston)
@cindex @qq{snappizzicato}, segno
@cindex segno, snappizzicato
@cindex @qq{gruppetto}, ornamento
@cindex ornamento, gruppetto
@cindex @qq{gruppetto rovesciato}, ornamento
@cindex ornamento, gruppetto rovesciato
@cindex @qq{gruppetto barrato}, ornamento
@cindex ornamento, gruppetto barrato
@cindex @qq{gruppetto Haydn}, ornamento
@cindex ornamento, gruppetto Haydn
@cindex @qq{trillo}, ornamento
@cindex ornamento, trillo
@cindex @qq{mordente}, ornamento
@cindex ornamento, mordente
@cindex @qq{mordente superiore}, ornamento
@cindex ornamento, mordente superiore
@cindex @qq{mordente inferiore}, ornamento
@cindex ornamento, mordente inferiore
@c pralltriller equivale a mordente inverso
@cindex @qq{mordente inverso}, ornamento
@cindex ornamento, mordente inverso
@cindex @qq{mordente inverso lungo}, ornamento
@cindex ornamento, mordente inverso lungo
@cindex @qq{mordente inverso superiore}, ornamento
@cindex ornamento, mordente inverso, superiore
@cindex @qq{mordente inverso inferiore}, ornamento
@cindex ornamento, mordente inverso inferiore
@cindex @q{signum congruentiae}, ornamento
@cindex ornamento, signum congruentiae
@cindex corona
@cindex corona breve
@cindex corona lunga
@cindex corona Henze
@cindex @qq{segno}, segno
@cindex @qq{coda}, segno
@cindex segno, coda
@cindex segno di coda, variante
@cindex variante del segno di @qq{coda}
@cindex coda, variante di, segno

@funindex \accent
@funindex \marcato
@funindex \staccatissimo
@funindex \espressivo
@funindex \staccato
@funindex \tenuto
@funindex \portato
@funindex \upbow
@funindex \downbow
@funindex \flageolet
@funindex \thumb
@funindex \lheel
@funindex \rheel
@funindex \ltoe
@funindex \rtoe
@funindex \open
@funindex \halfopen
@funindex \stopped
@funindex \snappizzicato
@funindex \turn
@funindex \reverseturn
@funindex \slashturn
@funindex \haydnturn
@funindex \trill
@funindex \prall
@funindex \mordent
@funindex \prallprall
@funindex \prallmordent
@funindex \upprall
@funindex \downprall
@funindex \upmordent
@funindex \downmordent
@funindex \pralldown
@funindex \prallup
@funindex \lineprall
@funindex \signumcongruentiae
@funindex \veryshortfermata
@funindex \shortfermata
@funindex \fermata
@funindex \longfermata
@funindex \verylongfermata
@funindex \henzeshortfermata
@funindex \henzelongfermata
@funindex \segno
@funindex \coda
@funindex \varcoda


@funindex -

I diversi simboli che rappresentano articolazioni, ornamenti e altre
indicazioni esecutive possono essere collegati a una nota con questa
sintassi:

@example
@var{nota}\@var{nome}
@end example

I valori possibili per @code{@var{nome}} sono elencati in
@ref{List of articulations}.  Ad esempio:

@lilypond[verbatim,quote]
\relative {
  c''4\staccato c\mordent b2\turn
  c1\fermata
}
@end lilypond

@cindex marcato
@cindex tenuto
@cindex staccatissimo
@cindex accento
@cindex staccato
@cindex portato

Alcune di queste articolazioni hanno delle abbreviazioni che ne semplificano
l'inserimento.  Le abbreviazioni sono attaccate al nome della nota e la
loro sintassi è composta da un trattino @code{-} seguito da un simbolo
che indica l'articolazione.  Esistono abbreviazioni predefinite per
@notation{marcato}, @notation{chiuso}, @notation{tenuto}, @notation{staccatissimo},
@notation{accento}, @notation{staccato} e @notation{portato}.
L'output corrispondente è:

@lilypond[verbatim,quote]
\relative {
  c''4-^ c-+ c-- c-!
  c4-> c-. c2-_
}
@end lilypond

Le regole per il posizionamento predefinito delle articolazioni sono
definite in @file{scm/script.scm}.  Articolazioni e ornamenti possono
essere posizionati manualmente sopra o sotto il rigo; si veda
@ref{Direction and placement}.

Le articolazioni sono oggetti @code{Script}.  Le loro proprietà sono
descritte in dettaglio in @rinternals{Script}.

Le articolazioni possono essere attaccate alle pause normali, alle pause
multiple e alle note.  Attaccando un'articolazione a una pausa multipla
si crea un oggetto @code{MultiMeasureRestScript}.

@lilypond[verbatim,quote,fragment]
\override Script.color = #red
\override MultiMeasureRestScript.color = #blue
a'2\fermata r\fermata
R1\fermata
@end lilypond

Oltre alle articolazioni, si può attaccare alle note anche un testo,
posto tra virgolette o in un blocco @code{\markup@{@}}.  Si veda @ref{Text scripts}.

Ulteriori informazioni sull'ordine degli oggetti Script e TextScript
collegati alle note si trovano in @rlearningnamed{Placement of objects, Posizionamento degli oggetti}.

@snippets

@cindex articolazione, valori predefiniti, modifica
@funindex \dashBang
@funindex \dashDash
@funindex \dashDot
@funindex \dashHat
@funindex \dashLarger
@funindex \dashPlus
@funindex \dashUnderscore
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/modifying-default-values-for-articulation-shorthand-notation.ly}

@cindex ordine verticale degli script
@cindex script, ordine verticale
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/controlling-the-vertical-ordering-of-scripts.ly}

@cindex ornamento, gruppo ritardato
@cindex gruppo ritardato, ornamento
@funindex suggestAccidentals
@funindex AccidentalSuggestion
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/creating-a-delayed-turn.ly}

@morerefs
Glossario Musicale:
@rglos{tenuto},
@rglosnamed{accent,accento},
@rglos{staccato},
@rglos{portato}.

Manuale di apprendimento:
@rlearningnamed{Placement of objects, Posizionamento degli oggetti}.

Guida alla notazione:
@ref{Text scripts},
@ref{Direction and placement},
@ref{List of articulations},
@ref{Trills}.

File installati:
@file{scm/script.scm}.

Frammenti:
@rlsr{Expressive marks}.

Guida al funzionamento interno:
@rinternals{Script},
@rinternals{TextScript}.
@endmorerefs


@node Dynamics
@unnumberedsubsubsec Dinamiche

@cindex dinamiche
@cindex dinamiche assolute

@funindex \ppppp
@funindex \pppp
@funindex \ppp
@funindex \pp
@funindex \p
@funindex \mp
@funindex \mf
@funindex \f
@funindex \ff
@funindex \fff
@funindex \ffff
@funindex \fffff
@funindex \fp
@funindex \sf
@funindex \sff
@funindex \sp
@funindex \spp
@funindex \sfz
@funindex \rfz
@funindex \n

Le indicazioni dinamiche assolute si indicano con un comando che segue una
nota, come ad esempio @code{c4\ff}.  Le indicazioni dinamiche disponibili
sono @code{\ppppp}, @code{\pppp}, @code{\ppp}, @code{\pp}, @code{\p},
@code{\mp}, @code{\mf}, @code{\f}, @code{\ff}, @code{\fff},
@code{\ffff}, @code{\fffff}, @code{\fp}, @code{\sf}, @code{\sff},
@code{\sp}, @code{\spp}, @code{\sfz}, @code{\rfz} e @code{\n}.  Le indicazioni
dinamiche possono essere posizionate manualmente sopra o sotto il
rigo, come è spiegato in dettaglio in @ref{Direction and placement}.

@lilypond[verbatim,quote]
\relative c'' {
  c2\ppp c\mp
  c2\rfz c^\mf
  c2_\spp c^\ff
}
@end lilypond

@cindex forcella
@cindex crescendo
@cindex decrescendo
@cindex diminuendo

@funindexpost \<
@funindexpost \>
@funindexpost \!
@funindex \cr
@funindex \decr
@funindex \endcr
@funindex \enddecr

Un'indicazione di @notation{crescendo} inizia con @code{\<} e termina
con @code{\!}, un'indicazione dinamica assoluta o un'ulteriore indicazione
di crescendo o decrescendo.  Un'indicazione di @notation{decrescendo} inizia
con @code{\>} e termina nello stesso modo, ovvero con @code{\!}, un'indicazione
dinamica assoluta oppure un altro segno di crescendo o decrescendo.
Si possono usare @code{\cr} e @code{\decr} al posto di @code{\<} e
@code{\>}; si possono usare @code{\endcr} e @code{\enddecr} al posto di
@code{\!} per terminare unindicazione di crescendo o decrescendo,
rispettivamente.  Le @notation{forcelle} vengono create con questa notazione.

@lilypond[verbatim,quote]
\relative c'' {
  c2\< c\!
  d2\< d\f
  e2\< e\>
  f2\> f\!
  e2\> e\mp
  d2\> d\>
  c1\!
}
@end lilypond

Una forcella che termina con @code{\!} si estenderà fino al margine
destro della nota a cui è assegnato @code{\!}.  Nel caso in cui sia
terminata con l'inizio di un altro segno di @notation{crescendo} o
@notation{decrescendo}, si estenderà fino al centro della nota a
cui è assegnato il successivo @code{\<} o @code{\>}.  La forcella
successiva partirà dal margine destro della stessa nota invece che
dal margine sinistro, come accade quando si termina con @code{\!}.
Una forcella che termina sul battere si fermerà alla stanghetta
precedente.

@lilypond[verbatim,quote]
\relative {
  c''1\< | c4 a c\< a | c4 a c\! a\< | c4 a c a\!
}
@end lilypond

Le forcelle terminate con indicazioni dinamiche assolute invece che da
@code{\!} avranno un aspetto simile.  Tuttavia, la lunghezza dell'indicazione
dinamica assoluta stessa può cambiare il punto in cui finisce la
forcella precedente.

@lilypond[verbatim,quote]
\relative {
  c''1\< | c4 a c\mf a | c1\< | c4 a c\ffff a
}
@end lilypond

@cindex indicazioni dinamiche multiple, su una nota
@cindex indicazione dinamica, più di un segno su una nota
@funindex \after
Segni come @notation{crescendo} o @notation{decrescendo} devono spesso
iniziare o terminare nel corso di una nota sostenuta. Lo si può fare
con @code{\after}, che può essere usato anche per creare articolazioni
o scritte testuali differite:

@lilypond[verbatim,quote]
<<
  \relative {
    \after 2 \< c'1
    d4\f\> e f g
    \after 2. \pp c,1
    \after 2. \fermata e
    \after 2. ^"Fine." f
  }
  \relative {
    \repeat unfold 12 c'4
    c c c c\fermata
    c c c c
  }
>>
@end lilypond


Si può usare ripetutamente @code{\after} per attaccare più di un'indicazione a
una nota.  Questo è utile soprattutto quando si aggiungono un crescendo e un
decrescendo alla stessa nota:

@lilypond[verbatim,quote]
\relative {
  c''4\< d\! e\> c\!
  \after 4 \< \after 2\> \after 2. \! f1
  \textLengthOn
  \after 4 \> \after 2. ^"hush!" c1
  g4\pp
}
@end lilypond

@cindex accordo vuoto
Se il primo di tale sequenza di segni su una nota coincide con l'attacco
della nota, conviene attaccarlo a un accordo vuoto @code{<>}. In questo
modo tutti i segni possono essere inseriti nel loro ordine visivo naturale:

@lilypond[verbatim,quote]
{
  <>\< \after 4 \> \after 2 \! c'1
  % più facile da leggere e scrivere di:
  \after 4 \> \after 2 \! c'1\<
}
@end lilypond

@cindex espressivo
@cindex articolazione "espressivo"

@funindex \espressivo

Il comando @code{\espressivo} può essere usato anche per indicare un crescendo
e un decrescendo sulla stessa nota.  Tuttavia, si tenga presente che
viene implementato come articolazione, non come dinamica.

@lilypond[verbatim,quote]
\relative {
  c''2 b4 a
  g1\espressivo
  \after 2. \espressivo c
}
@end lilypond

@funindex \cresc
@funindex \decresc
@funindexpost \dim

Le indicazioni di crescendo testuali iniziano con @code{\cresc}, quelle di
decrescendo con @code{\decresc} o @code{\dim}.
Le linee di estensione sono aggiunte automaticamente.

@lilypond[verbatim,quote]
\relative {
  g'8\cresc a b c b c d e\mf |
  f8\decresc e d c e\> d c b |
  a1\dim ~ |
  a2. r4\! |
}
@end lilypond

@funindex \crescTextCresc
@funindex \dimTextDecresc
@funindex \dimTextDecr
@funindex \dimTextDim
@funindex \crescHairpin
@funindex \dimHairpin

Le indicazioni testuali per i cambi di dinamica possono essere impiegate anche per sostituire le forcelle:
@lilypond[verbatim,quote]
\relative c'' {
  \crescTextCresc
  c4\< d e f\! |
  \dimTextDecresc
  g4\> e d c\! |
  \dimTextDecr
  e4\> d c b\! |
  \dimTextDim
  d4\> c b a\! |
  \crescHairpin
  \dimHairpin
  c4\< d\! e\> d\! |
}
@end lilypond


Per creare nuove indicazioni dinamiche assolute o testi da allineare
alle dinamiche, si veda @ref{New dynamic marks}.

@cindex dinamiche, posizionamento verticale
@cindex posizionamento verticale delle dinamiche

@funindex DynamicLineSpanner

Il posizionamento verticale della dinamica è gestito da
@rinternals{DynamicLineSpanner}.

@funindex \dynamicUp
@funindex \dynamicDown
@funindex \dynamicNeutral

Esiste un contesto @code{Dynamics} che permette di posizionare le indicazioni
dinamiche su un'apposita linea orizzontale.  Si usano le pause spaziatrici
per indicarne la collocazione temporale (le note in un contesto @code{Dynamics} occupano
infatti il rispettivo valore musicale, ma senza comparire sul rigo).
Il contesto @code{Dynamics} può contenere altri elementi utili come
indicazioni testuali, estensori del testo e indicazioni di pedalizzazione del pianoforte.

@lilypond[verbatim,quote]
<<
  \new Staff \relative {
    c'2 d4 e |
    c4 e e,2 |
    g'4 a g a |
    c1 |
  }
  \new Dynamics {
    s1\< |
    s1\f |
    s2\dim s2-"rit." |
    s1\p |
  }
>>
@end lilypond

@predefined
@code{\dynamicUp},
@code{\dynamicDown},
@code{\dynamicNeutral},
@code{\crescTextCresc},
@code{\dimTextDim},
@code{\dimTextDecr},
@code{\dimTextDecresc},
@code{\crescHairpin},
@code{\dimHairpin}.
@endpredefined


@snippets

@cindex forcella, terminata sulle stanghette
@cindex stanghetta, forcella, terminare a
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/setting-hairpin-behavior-at-bar-lines.ly}

@cindex forcella, lunghezza minima
@cindex lunghezza minima, forcella
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/setting-the-minimum-length-of-hairpins.ly}

@cindex forcella, allineare le estremità alle direzioni di @code{NoteColumn}
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/aligning-the-ends-of-hairpins-to-notecolumn-directions.ly}

@cindex forcella, spostarre le estremità della
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/moving-the-ends-of-hairpins.ly}

@cindex al niente, forcella
@cindex niente, al, forcella
@cindex forcella, al niente
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/printing-hairpins-using-al-niente-notation.ly}

@cindex forcella Ferneyhough
@cindex Ferneyhough, forcella
@cindex forcella allargata (flared-hairpins)
@cindex forcella continua (constante-hairpins)
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/printing-hairpins-in-various-styles.ly}

@cindex allineamento verticale, dinamiche
@cindex dinamiche, allineamento verticale
@cindex allineamento verticale, segno testuale
@cindex segno testuale, allineamento verticale
@funindex DynamicLineSpanner
@funindex \textLengthOn
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/vertically-aligned-dynamics-and-textscripts.ly}

@cindex dinamiche, linea di estensione, nascondere
@cindex nascondere la linea di estensione delle dinamiche
@cindex linea di estensione, dinamiche, nascondere
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/hiding-the-extender-line-for-text-dynamics.ly}

@cindex dinamiche, testo, stile
@cindex dinamiche del testo, stile
@cindex stile delle dinamiche del testo
@funindex crescendoText
@funindex crescendoSpanner
@funindex decrescendoText
@funindex decrescendoSpanner
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/changing-text-and-spanner-styles-for-text-dynamics.ly}

@morerefs
Glossario Musicale:
@rglos{al niente},
@rglos{crescendo},
@rglos{decrescendo},
@rglosnamed{hairpin,forcella}.
Manuale di apprendimento:
@rlearningnamed{Articulations and dynamics, Articolazioni e dinamiche}.

Guida alla notazione:
@ref{Direction and placement},
@ref{New dynamic marks},
@ref{Enhancing MIDI output},
@ref{Controlling MIDI dynamics}.

Frammenti:
@rlsr{Expressive marks}.

Guida al funzionamento interno:
@rinternals{DynamicText},
@rinternals{Hairpin},
@rinternals{DynamicLineSpanner},
@rinternals{Dynamics}.
@endmorerefs


@node New dynamic marks
@unnumberedsubsubsec Nuove indicazioni dinamiche

@cindex indicazione dinamica nuova
@cindex dinamica, indicazione, nuova

Il modo più semplice per creare indicazioni dinamiche è usare
gli oggetti @code{\markup}.

@lilypond[verbatim,quote]
moltoF = \markup { molto \dynamic f }

\relative {
  <d' e>16_\moltoF <d e>
  <d e>2..
}
@end lilypond

@cindex dinamiche editoriali
@cindex dinamiche, parentesi
@cindex editoriali, dinamiche
@funindex \bracket
@funindex \dynamic

In modalità markup, si possono creare dinamiche editoriali (racchiuse tra
parentesi normali o quadrate).  La sintassi della modalità markup è
descritta in @ref{Formatting text}.

@lilypond[verbatim,quote]
roundF = \markup {
    \center-align \concat { \bold { \italic ( }
           \dynamic f \bold { \italic ) } } }
boxF = \markup { \bracket { \dynamic f } }
\relative {
  c'1_\roundF
  c1_\boxF
}
@end lilypond

@funindex make-dynamic-script

È possibile creare semplicemente indicazioni dinamiche centrate verticalmente con la
funzione @code{make-dynamic-script}.

@lilypond[verbatim,quote]
sfzp = #(make-dynamic-script "sfzp")
\relative {
  c'4 c c\sfzp c
}
@end lilypond

In generale, @code{make-dynamic-script} assume come argomento qualsiasi
oggetto markup.  Il tipo di carattere per la dinamica contiene solo i
caratteri @code{f,m,p,r,s} e @code{z}; dunque, se si desidera creare un'indicazione
dinamica che contenga testo semplice e simboli di punteggiatura, occorre
usare dei comandi markup che ripristinino la famiglia e la codifica del tipo
di carattere per il testo normale, ad esempio @code{\normal-text}.  Il
vantaggio nell'uso di @code{make-dynamic-script} al posto di un normale
markup è l'allineamento verticale degli oggetti markup e delle forcelle
collegate alla stessa testa di nota.

@lilypond[verbatim,quote]
roundF = \markup { \center-align \concat {
           \normal-text { \bold { \italic ( } }
           \dynamic f
           \normal-text { \bold { \italic ) } } } }
boxF = \markup { \bracket { \dynamic f } }
mfEspress = \markup { \center-align \line {
              \hspace #3.7 mf \normal-text \italic espress. } }
roundFdynamic = #(make-dynamic-script roundF)
boxFdynamic = #(make-dynamic-script boxF)
mfEspressDynamic = #(make-dynamic-script mfEspress)
\relative {
  c'4_\roundFdynamic\< d e f
  g,1~_\boxFdynamic\>
  g1
  g'1~\mfEspressDynamic
  g1
}
@end lilypond

Si può  usare anche la forma Scheme della modalità markup.  La sintassi
è spiegata in @rextend{Markup construction in Scheme}.

@lilypond[verbatim,quote]
moltoF = #(make-dynamic-script
            (markup #:normal-text "molto"
                    #:dynamic "f"))
\relative {
  <d' e>16 <d e>
  <d e>2..\moltoF
}
@end lilypond

Per allineare a sinistra il testo di dinamica invece di centrarlo su una
nota, si usa un @code{\tweak}:

@lilypond[verbatim,quote]
moltoF = \tweak DynamicText.self-alignment-X #LEFT
         #(make-dynamic-script
            (markup #:normal-text "molto"
                    #:dynamic "f"))
\relative {
  <d' e>16 <d e>
  <d e>2..\moltoF <d e>1
}
@end lilypond

Le impostazioni dei tipi di carattere in modalità markup sono descritti in
@ref{Selecting font and font size}.

@morerefs
Guida alla notazione:
@ref{Formatting text},
@ref{Selecting font and font size},
@ref{Enhancing MIDI output},
@ref{Controlling MIDI dynamics}.

Extending LilyPond:
@rextend{Markup construction in Scheme}.

Frammenti:
@rlsr{Expressive marks}.
@endmorerefs


@node Expressive marks as curves
@subsection Indicazioni espressive curvilinee

Questa sezione spiega come creare varie indicazioni espressive con
forma curvilinea: legature di portamento, legature di frase, respiri, portamenti
indeterminati discendenti (cadute) o ascendenti.

@menu
* Slurs::
* Phrasing slurs::
* Breath marks::
* Falls and doits::
@end menu

@node Slurs
@unnumberedsubsubsec Legature di portamento

@cindex legatura di portamento

@funindex (
@funindex )
Le @notation{legature di portamento} si inseriscono con delle parentesi:

@warning{Nella musica polifonica, una legatura di portamento deve
terminare nella stessa voce in cui è iniziata.}

@lilypond[verbatim,quote]
\relative {
  f''4( g a) a8 b(
  a4 g2 f4)
  <c e>2( <b d>2)
}
@end lilypond

@cindex legatura di portamento, posizionamento manuale
@cindex legatura di portamento, sotto le note
@cindex legatura di portamento, sopra le note
@funindex \slurDown
@funindex \slurNeutral

Le legature di portamento possono essere posizionate manualmente sopra o
sotto il rigo, come è spiegato in @ref{Direction and placement}.

@cindex legatura di frase
@cindex legatura di portamento multipla
@cindex legatura di portamento simultanea
@cindex multipla, legatura di portamento
@cindex simultanea, legatura di portamento

@c some entries for `\=' are auto-generated; don't use @funindexpost
@funindex \=

Tracciare due legature di portamento simultanee o sovrapposte richiede una
particolare attenzione.  Di solito le legature di portamento più esterne
indicano in realtà una legatura di frase e le legature di frase possono essere
sovrapposte a una normale legatura, vedi @ref{Phrasing slurs}.  Quando invece
si vogliono usare molteplici legature di portamento normali in una sola
voce, l'inizio e la fine di ogni legatura devono essere preceduti da un
@code{\=} seguito da una chiave identificativa (un simbolo o un numero intero
non negativo).

@lilypond[verbatim,quote]
\fixed c' {
  <c~ f\=1( g\=2( >2 <c e\=1) a\=2) >
}
@end lilypond

@cindex legature di portamento, stile
@cindex legatura di portamento continua
@cindex legatura di portamento punteggiata
@cindex legatura di portamento tratteggiata
@cindex stile, legatura di portamento
@funindex \slurDashed
@funindex \slurDotted
@funindex \slurSolid

Le legature di portamento possono essere continue, punteggiate o tratteggiate.  Lo
stile predefinito è quello continuo:

@lilypond[verbatim,quote]
\relative {
  c'4( e g2)
  \slurDashed
  g4( e c2)
  \slurDotted
  c4( e g2)
  \slurSolid
  g4( e c2)
}
@end lilypond

@funindex \slurHalfDashed
@funindex \slurHalfSolid
@cindex legatura di portamento, metà tratteggiata e metà continua

Le legature di portamento possono essere anche semitratteggiate (half-dashed),
ovvero con la prima metà tratteggiata e la seconda continua; oppure semicontinue
(half-solid), ovvero con la prima metà continua e la seconda tratteggiata:

@lilypond[verbatim,quote]
\relative {
  c'4( e g2)
  \slurHalfDashed
  g4( e c2)
  \slurHalfSolid
  c4( e g2)
  \slurSolid
  g4( e c2)
}
@end lilypond

@funindex \slurDashPattern
@cindex legatura di portamento, definizione del modello di tratteggio
@cindex tratteggio, modelli, legatura di portamento

Si possono definire modelli di tratteggio personalizzati per le legature di
portamento:

@lilypond[verbatim,quote]
\relative {
  c'4( e g2)
  \slurDashPattern #0.7 #0.75
  g4( e c2)
  \slurDashPattern #0.5 #2.0
  c4( e g2)
  \slurSolid
  g4( e c2)
}
@end lilypond

@predefined
@funindex \slurUp

@code{\slurUp},
@code{\slurDown},
@code{\slurNeutral},
@code{\slurDashed},
@code{\slurDotted},
@code{\slurHalfDashed},
@code{\slurHalfSolid},
@code{\slurDashPattern},
@code{\slurSolid}.
@endpredefined


@snippets

@cindex legature di portamento doppie per accordi legati
@cindex doppie, legature di portamento, per accordi legati
@findex doubleSlurs
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/using-double-slurs-for-legato-chords.ly}

@cindex testo, dentro le legature di portamento
@cindex markup, testo, dentro le legature di portamento
@cindex legatura di portamento, testo all'interno
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/positioning-text-markups-inside-slurs.ly}

@cindex legatura di portamento, definizione dei modelli di tratteggio
@cindex tratteggio, modelli, legatura di portamento
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/making-slurs-with-complex-dash-structure.ly}

@morerefs
Glossario Musicale:
@rglosnamed{slur,legatura di portamento}.

Manuale di apprendimento:
@rlearningnamed{On the un-nestedness of brackets and ties, Sul non annidamento di parentesi e legature di valore}.

Guida alla notazione:
@ref{Direction and placement},
@ref{Phrasing slurs}.

Frammenti:
@rlsr{Expressive marks}.

Guida al funzionamento interno:
@rinternals{Slur}.
@endmorerefs


@node Phrasing slurs
@unnumberedsubsubsec Legature di frase

@cindex legatura di frase
@cindex frase, legatura di
@funindexpost \(
@funindexpost \)

Le @notation{legature di frase}, che indicano una frase musicale, si
scrivono con i comandi @code{\(} e @code{\)}:

@lilypond[verbatim,quote]
\relative {
  c''4\( d( e) f(
  e2) d\)
}
@end lilypond

@funindex \phrasingSlurUp
@funindex \phrasingSlurDown
@funindex \phrasingSlurNeutral

A livello tipografico, una legatura di frase si comporta in modo pressoché
identico a una normale legatura di portamento.  Sono però trattate
come oggetti diversi; ad esempio, @code{\slurUp} non ha effetto su una
legatura di frase.  Le legature di frase possono essere posizionate
sopra o sotto il rigo, come è spiegato in @ref{Direction and placement}.

@cindex legature di frase simultanee
@cindex legature di frase multiple
@cindex legatura di portamento, fraseggio simultaneo
@cindex legatura di portamento, fraseggio multiplo

Per inserire più legature di frase simultanee o sovrapposte si usa @code{\=},
come per le normali legature di portamento (vedi @ref{Slurs}).

@funindex \phrasingSlurDashed
@funindex \phrasingSlurDotted
@funindex \phrasingSlurSolid
@cindex legatura di frase tratteggiata
@cindex legatura di frase puntata
@cindex legatura di portamento, frase tratteggiata
@cindex legatura di portamento, frase puntata

Le legature di frase possono essere continue, puntate o tratteggiate.  Lo stile
predefinito è quello continuo:

@lilypond[verbatim,quote]
\relative {
  c'4\( e g2\)
  \phrasingSlurDashed
  g4\( e c2\)
  \phrasingSlurDotted
  c4\( e g2\)
  \phrasingSlurSolid
  g4\( e c2\)
}
@end lilypond

@funindex \phrasingSlurHalfDashed
@funindex \phrasingSlurHalfSolid
@cindex legatura di frase, metà continua e metà tratteggiata
@cindex legatura di portamento, tratto metà continuo e metà tratteggiato

Le legature di frase possono essere anche semitratteggiate (la prima metà
tratteggiata, la seconda continua) o semicontinue (la prima metà
continua, la seconda tratteggiata):

@lilypond[verbatim,quote]
\relative {
  c'4\( e g2\)
  \phrasingSlurHalfDashed
  g4\( e c2\)
  \phrasingSlurHalfSolid
  c4\( e g2\)
  \phrasingSlurSolid
  g4\( e c2\)
}
@end lilypond

@funindex \phrasingSlurDashPattern
@cindex legatura di frase, definizione dei modelli di tratteggio
@cindex legatura di portamento, fraseggio, definizione dei modelli di tratteggio
@cindex legatura di portamento, definizione dei modelli di tratteggio  per il fraseggio

Si possono definire modelli di tratteggio personalizzati anche per le legature di frase:

@lilypond[verbatim,quote]
\relative {
  c'4\( e g2\)
  \phrasingSlurDashPattern #0.7 #0.75
  g4\( e c2\)
  \phrasingSlurDashPattern #0.5 #2.0
  c4\( e g2\)
  \phrasingSlurSolid
  g4\( e c2\)
}
@end lilypond

Le definizioni dei modelli di tratteggio per le legature di frase hanno
la stessa  struttura di quelle per le legature di portamento.  Per maggiori
informazioni sui modelli complessi di tratteggio si consultino i frammenti
in @ref{Slurs}.

@predefined
@code{\phrasingSlurUp},
@code{\phrasingSlurDown},
@code{\phrasingSlurNeutral},
@code{\phrasingSlurDashed},
@code{\phrasingSlurDotted},
@code{\phrasingSlurHalfDashed},
@code{\phrasingSlurHalfSolid},
@code{\phrasingSlurDashPattern},
@code{\phrasingSlurSolid}.
@endpredefined

@morerefs
Manuale di apprendimento:
@rlearningnamed{On the un-nestedness of brackets and ties, Sul non annidamento di parentesi e legature di valore}.

Guida alla notazione:
@ref{Direction and placement},
@ref{Slurs}.

Frammenti:
@rlsr{Expressive marks}.

Guida al funzionamento interno:
@rinternals{PhrasingSlur}.
@endmorerefs


@node Breath marks
@unnumberedsubsubsec Respiri

@cindex respiro, segno
@cindex pausa, segno
@funindex \breathe

I respiri si inseriscono col comando @code{\breathe}:

@lilypond[verbatim,quote]
{ c''2. \breathe d''4 }
@end lilypond

Diversamente da altri segni di espressione, il respiro non è associato
alla nota precedente ma è un evento musicale separato.  Dunque tutti i
segni espressivi attaccati alla nota precedente, tutte le parentesi quadre
che indicano le travature manuali e le parentesi che indicano le legature
di portamento e di frase devono essere poste prima di @code{\breathe}.

Un respiro termina una travatura automatica; per evitare questo
comportamento, si veda @ref{Manual beams}.

@lilypond[verbatim,quote]
\relative { c''8 \breathe d e f g2 }
@end lilypond

È supportata la divisio, indicatore del respiro nella musica
antica.  Maggiori dettagli in @ref{Divisiones}.


@snippets

@cindex simbolo di respiro, modifica
@cindex respiro, simbolo, modifica
@cindex cambiare il simbolo di respiro
@funindex BreathingSign
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/changing-the-breath-mark-symbol.ly}

@cindex segno di spunta
@cindex spunta, segno di

@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/using-a-tick-as-the-breath-mark-symbol.ly}

@cindex cesura
@cindex binari ferroviari

@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/inserting-a-caesura.ly}

@morerefs
Glossario Musicale:
@rglosnamed{caesura,cesura}.

Guida alla notazione:
@ref{Divisiones}.

Frammenti:
@rlsr{Expressive marks}.

Guida al funzionamento interno:
@rinternals{BreathingEvent},
@rinternals{BreathingSign},
@rinternals{Breathing_sign_engraver}.
@endmorerefs


@node Falls and doits
@unnumberedsubsubsec Portamenti indeterminati discendenti (cadute) e ascendenti

@cindex portamenti indeterminati verso il basso (cadute) e verso l'alto
@funindex \bendAfter

I @notation{portamenti indeterminati verso il basso (cadute) e verso l'alto} possono
essere aggiunti alle note col comando @code{\bendAfter}.  La direzione del
portamento è indicata con un più o un meno (su o giù).   Il numero indica
l'intervallo per cui il portamento si estenderà @emph{oltre} la nota principale.

@lilypond[verbatim,quote]
\relative c'' {
  c2\bendAfter #+4
  c2\bendAfter #-4
  c2\bendAfter #+6.5
  c2\bendAfter #-6.5
  c2\bendAfter #+8
  c2\bendAfter #-8
}
@end lilypond

@snippets

@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/adjusting-the-shape-of-falls-and-doits.ly}

@morerefs
Glossario Musicale:
@rglosnamed{fall,portamento indeterminato verso il basso},
@rglosnamed{doit,portamento indeterminato verso l'alto}.

Frammenti:
@rlsr{Expressive marks}.
@endmorerefs


@node Expressive marks as lines
@subsection Indicazioni espressive lineari

Questa sezione spiega come creare varie indicazioni espressive che seguono
una traiettoria lineare: glissandi, arpeggi e trilli.

@menu
* Glissando::
* Arpeggio::
* Trills::
@end menu

@node Glissando
@unnumberedsubsubsec Glissando

@cindex glissando
@funindex \glissando

Un @notation{glissando} si crea attaccando @code{\glissando}
a una nota:

@lilypond[verbatim,quote]
\relative {
  g'2\glissando g'
  c2\glissando c,
  \afterGrace f,1\glissando f'16
}
@end lilypond

Un glissando può collegare note appartenenti a righi diversi:

@lilypond[verbatim,quote]
\new PianoStaff <<
  \new Staff = "right" {
    e'''2\glissando
    \change Staff = "left"
    a,,4\glissando
    \change Staff = "right"
    b''8 r |
  }
  \new Staff = "left" {
    \clef bass
    s1
  }
>>
@end lilypond

@funindex \glissandoMap

Un glissando può collegare le note negli accordi.  Se è necessario qualcosa
di diverso dal normale abbinamento uno a uno delle note, si possono definire
le connessioni tra le note impostando @code{\glissandoMap} su una lista Scheme.
Gli elementi sono coppie di numeri interi; ciascuna coppia @var{(x . y)} crea
una linea di glissando dalla nota @var{x} del primo accordo alla nota @var{y}
del secondo accordo.  Le note sono numerate a partire da zero nell'ordine
in cui appaiono nel file di input @file{.ly}.  Non tutte le note devono
far parte di un glissando.

@lilypond[verbatim,quote]
\relative {
  <c' e>2\glissando g'
  <c, e>\glissando <g' b>
  \break
  \set glissandoMap = #'((0 . 1) (1 . 0))
  <c, g'>\glissando <d a'>
  \set glissandoMap = #'((0 . 0) (0 . 1) (0 . 2))
  c\glissando <d f a>
  \set glissandoMap = #'((2 . 2) (0 . 0))
  <f d a'>\glissando <c f c'>
}
@end lilypond

Si possono adottare diversi stili di glissando.  Maggiori dettagli
in @ref{Line styles}.


@snippets

@cindex glissando contemporaneo
@cindex contemporaneo, glissando
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/contemporary-glissando.ly}

@cindex segni di tempo, per glissando
@cindex glissando, segni di tempo
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/adding-timing-marks-to-long-glissandi.ly}

@cindex glissando che vanno a capo
@cindex a capo, glissando
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/making-glissandi-breakable.ly}

@anchor{Extending glissandi across repeats}
@cindex glissando, attraverso le ripetizioni
@cindex ripetizione e glissando
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/extending-glissandi-across-repeats.ly}

@morerefs
Glossario Musicale:
@rglos{glissando}.

Guida alla notazione:
@ref{Line styles}.

Frammenti:
@rlsr{Expressive marks}.

Guida al funzionamento interno:
@rinternals{Glissando}.
@endmorerefs

@knownissues
Non è supportato il testo lungo la linea del glissando (ad esempio
@notation{gliss.})@:.


@node Arpeggio
@unnumberedsubsubsec Arpeggio

@cindex arpeggio
@cindex arpeggio spezzato
@cindex spezzato, arpeggio

@funindex \arpeggio
@funindex \arpeggioArrowUp
@funindex \arpeggioArrowDown
@funindex \arpeggioNormal
@funindex arpeggio-direction

Un @notation{arpeggio} su un accordo (detto anche accordo spezzato)
si ottiene aggiungendo @code{\arpeggio} all'accordo:

@lilypond[verbatim,quote]
\relative { <c' e g c>1\arpeggio }
@end lilypond

Si possono scrivere vari tipi di arpeggio.
@code{\arpeggioNormal} ripristina l'arpeggio normale:

@lilypond[verbatim,quote]
\relative {
  <c' e g c>2\arpeggio

  \arpeggioArrowUp
  <c e g c>2\arpeggio

  \arpeggioArrowDown
  <c e g c>2\arpeggio

  \arpeggioNormal
  <c e g c>2\arpeggio
}
@end lilypond

Questi comandi predefiniti modificano la proprietà @code{'arpeggio-direction};
si può leggere la loro completa definizione nel file @file{ly/property-init.ly}.

@cindex arpeggio, simbolo speciale
@cindex simbolo speciale di arpeggio

@funindex \arpeggioBracket
@funindex \arpeggioParenthesis
@funindex \arpeggioParenthesisDashed

Si possono creare simboli di arpeggio speciali @emph{in forma di parentesi}:

@lilypond[verbatim,quote]
\relative {
  <c' e g c>2

  \arpeggioBracket
  <c e g c>2\arpeggio

  \arpeggioParenthesis
  <c e g c>2\arpeggio

  \arpeggioParenthesisDashed
  <c e g c>2\arpeggio

  \arpeggioNormal
  <c e g c>2\arpeggio
}
@end lilypond

Questi comandi predefiniti sovrascrivono la proprietà @code{'stencil}
dell'oggetto @code{Arpeggio} e possono anche adattare il suo
@code{'X-extent} (ovvero, la dimensione orizzontale necessaria
per non entrare in collisione con altri oggetti).

Le proprietà del tratteggio della parentesi dell'arpeggio sono regolate
dalla proprietà @code{'dash-definition}, descritta in @ref{Slurs}.

Gli arpeggi possono essere scritti in modo esplicito con le legature di
valore.  Per maggiori dettagli si veda @ref{Ties}.


@predefined
@code{\arpeggio},
@code{\arpeggioArrowUp},
@code{\arpeggioArrowDown},
@code{\arpeggioNormal},
@code{\arpeggioBracket},
@code{\arpeggioParenthesis},
@code{\arpeggioParenthesisDashed}.
@endpredefined


@snippets

@cindex arpeggio, attraverso i righi
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/creating-cross-staff-arpeggios-in-a-piano-staff.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/creating-cross-staff-arpeggios-in-other-contexts.ly}

@cindex arpeggio, attraverso le voci
@lilypondfile[verbatim,quote,texidoc,doctitle]
{snippets/creating-arpeggios-across-notes-in-different-voices.ly}

@morerefs
Glossario Musicale:
@rglos{arpeggio}.

Guida alla notazione:
@ref{Slurs},
@ref{Ties}.

File installati:
@file{ly/property-init.ly}.

Frammenti:
@rlsr{Expressive marks}.

Guida al funzionamento interno:
@rinternals{Arpeggio},
@rinternals{Slur},
@rinternals{PianoStaff}.
@endmorerefs

@knownissues
I comandi predefiniti come @code{\arpeggioArrowUp} si applicano soltanto
al contesto corrente e dunque non hanno effetto sugli arpeggi che
attraversano varie voci o righi.  In tali casi questi comandi devono
essere usati in un blocco @code{\context} all'interno di @code{\layout} o
in un blocco @code{\with}, come è spiegato in
@ref{Changing context default settings}.
Altrimenti, invece di usare i comandi predefiniti, potrebbe convenire
sovrascrivere direttamente le proprietà interessate per l'oggetto
@code{Arpeggio} nel contesto appropriato, per esempio:

@example
\override Staff.Arpeggio.stencil = #ly:arpeggio::brew-chord-bracket
@end example

@noindent
per far sì che le parentesi dell'arpeggio attraversino le voci al livello
del rigo (@code{Staff}), oppure

@example
\override PianoStaff.Arpeggio.arpeggio-direction = #UP
@end example

@noindent
per ottenere arpeggi che attraversano il rigo e con la freccia che punta in sù
in un contesto @code{PianoStaff}.

@cindex arpeggio attraverso il rigo, stile della parentesi
@cindex parentesi, stile nell'arpeggio attraverso il rigo

Non è possibile mostrare simultaneamente arpeggi connessi e non connessi in un
@code{PianoStaff}.

L'arpeggio in forma di parentesi non può essere impostato con facilità negli
arpeggi che attraversano i righi; occorre ricorrere a metodi più complessi
descritti in @ref{Cross-staff stems,, Gambi trasversali ai righi}.


@node Trills
@unnumberedsubsubsec Trilli

@cindex trillo

@funindex \trill
@funindex \startTrillSpan
@funindex \stopTrillSpan

I trilli senza linea di estensione si ottengono col comando
@code{\trill}; si veda @ref{Articulations and ornamentations}.

I trilli con linea di estensione si ottengono con
@code{\startTrillSpan} e @code{\stopTrillSpan}:

@lilypond[verbatim,quote]
\relative {
  d''1\startTrillSpan
  d1
  c2\stopTrillSpan
  r2
}
@end lilypond

Un estensore del trillo che va a capo ricomincerà esattamente sopra la
prima nota della nuova riga.

@lilypond[ragged-right,verbatim,quote]
\relative {
  d''1\startTrillSpan
  \break
  d1
  c2\stopTrillSpan
  r2
}
@end lilypond

È possibile tracciare trilli consecutivi senza dover esplicitare i comandi
@code{\stopTrillSpan}, perché il trillo successivo diventerà
automaticamente il limite destro di quello precedente.

@lilypond[verbatim,quote]
\relative {
  d''1\startTrillSpan
  d1
  b1\startTrillSpan
  d2\stopTrillSpan
  r2
}
@end lilypond

I trilli possono essere anche combinati con le note di abbellimento.  La sintassi
di questo costrutto e il metodo per posizionare in modo preciso gli abbellimenti
sono descritti in @ref{Grace notes}.

@lilypond[verbatim,quote]
\relative {
  d''1~\afterGrace
  d1\startTrillSpan { c32[ d]\stopTrillSpan }
  c2 r2
}
@end lilypond

@cindex trillo con altezza
@cindex trillo con notina
@funindex \pitchedTrill

I trilli che richiedono una nota ausiliaria dall'altezza esplicita si
ottengono col comando @code{\pitchedTrill}.  Il primo argomento è la  nota
principale e il secondo è la nota @emph{trillata}, che appare come una testa
di nota senza gambo e racchiusa tra parentesi.

@lilypond[verbatim,quote]
\relative {
  \pitchedTrill
  d''2\startTrillSpan fis
  d2
  c2\stopTrillSpan
  r2
}
@end lilypond

@cindex trillo con notina e alterazione
@cindex trillo con alterazione

L'alterazione del primo trillo con notina in una misura viene sempre
visualizzata, anche per i bequadri.

@lilypond[verbatim,quote,relative]
{
  \key d \major
  \pitchedTrill
  d'2\startTrillSpan cis d\stopTrillSpan 
  \pitchedTrill
  d2\startTrillSpan c d\stopTrillSpan
  \pitchedTrill
  d2\startTrillSpan e d\stopTrillSpan
}
@end lilypond

@noindent
Alterazioni successive (della stessa nota nella stessa misura) devono essere
aggiunte manualmente.

@lilypond[verbatim,quote]
\relative {
  \pitchedTrill
  eis''4\startTrillSpan fis
  eis4\stopTrillSpan
  \pitchedTrill
  eis4\startTrillSpan cis
  eis4\stopTrillSpan
  \pitchedTrill
  eis4\startTrillSpan fis
  eis4\stopTrillSpan
  \pitchedTrill
  eis4\startTrillSpan fis!
  eis4\stopTrillSpan
}
@end lilypond

@predefined
@code{\startTrillSpan},
@code{\stopTrillSpan}.
@endpredefined

@morerefs
Glossario Musicale:
@rglosnamed{trill,trillo}.

Guida alla notazione:
@ref{Articulations and ornamentations},
@ref{Grace notes}.

Frammenti:
@rlsr{Expressive marks}.

Guida al funzionamento interno:
@rinternals{TrillSpanner},
@rinternals{TrillPitchHead},
@rinternals{TrillPitchAccidental},
@rinternals{TrillPitchParentheses},
@rinternals{TrillPitchGroup},
@rinternals{Pitched_trill_engraver}.
@endmorerefs
